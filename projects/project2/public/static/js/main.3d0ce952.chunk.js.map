{"version":3,"sources":["components/DisplayGrade.js","components/AddTag.js","components/DisplayContent.js","components/FormName.js","App.js","serviceWorker.js","index.js"],"names":["DisplayGrade","props","grades","map","val","id","react_default","a","createElement","key","AddTag","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","textvalue","test","handleAddTodoItem","bind","assertThisInitialized","handleChange","e","setState","target","push","_this2","className","v","type","placeholder","onChange","onKeyPress","Component","Content","toggleShow","isShow","icon","fa","preventDefault","src","pic","alt","firstName","lastName","onClick","email","city","skill","components_DisplayGrade","gradeArray","components_AddTag","FormName","aria-label","aria-describedby","search","App","data","sum","avg","displayData","calculateAverage","average","fetch","then","response","json","finalResponse","students","math","event","substring","grade","parseInt","length","_this3","filter","name","toLowerCase","indexOf","studId","DisplayContent","components_FormName","updateSearch","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d0ce952.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\n\r\n\r\nconst DisplayGrade = props => (\r\n  //Displaying Restuarant detail \r\n\r\n  props.grades.map((val, id) => {\r\n    return (\r\n      <p key={id}><strong>Test {id}: </strong>{val}</p>\r\n\r\n    );\r\n  })\r\n\r\n)\r\n\r\n\r\n\r\nexport default DisplayGrade;","import React, { Component } from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass AddTag extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: [],\r\n            textvalue: \"\",\r\n            test: \"\"\r\n        }\r\n        this.handleAddTodoItem = this.handleAddTodoItem.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n    handleChange(e) {\r\n        \r\n        this.setState({\r\n            textvalue: e.target.value\r\n        })\r\n       \r\n    }\r\n    handleAddTodoItem(e) {\r\n      \r\n        if (e.key === 'Enter') {\r\n\r\n            this.state.value.push(this.state.textvalue)\r\n            this.setState(\r\n                this.state\r\n            )\r\n            //console.log(this.state.textvalue)\r\n        }\r\n      \r\n    }\r\n\r\n\r\n    render() {\r\n        let { value } = this.state;\r\n        return (\r\n            <div className=\"tag-output\">\r\n                {value.map((v, id) => {\r\n                    return <span key={id}><button type=\"button\" className=\"btn btn-info\">{v}</button></span>\r\n\r\n                })}\r\n\r\n\r\n                <input className=\"form-control\" type=\"text\" placeholder=\"Add tag\"\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    onKeyPress={(e) => this.handleAddTodoItem(e)}\r\n                />\r\n\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddTag;","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport DisplayGrade from './DisplayGrade';\r\nimport * as FontAwesome from \"react-icons/fa\";\r\nimport AddTag from \"./AddTag\";\r\n\r\nclass Content extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isShow: false,\r\n      icon: <FontAwesome.FaPlus />,\r\n    }\r\n  }\r\n\r\n  toggleShow = (e) => {\r\n\r\n    this.setState(state => ({\r\n      isShow: !this.state.isShow,\r\n    }))\r\n    if (!this.state.isShow)\r\n      this.setState({ icon: <FontAwesome.FaMinus /> })\r\n    else\r\n      this.setState({ icon: <FontAwesome.FaPlus /> })\r\n      e.preventDefault()\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <section id={this.props.id}>\r\n        <div className=\"media\">\r\n          <img className=\"mr-3\" src={this.props.pic} alt={this.props.firstName} />\r\n          <div className=\"media-body\">\r\n            <h5 className=\"mt-0 float-left\">\r\n              {this.props.firstName} {this.props.lastName}\r\n              <p\r\n                className=\"float-right\" onClick={(e) => this.toggleShow(e)}>\r\n\r\n                {this.state.icon}\r\n              </p>\r\n            </h5>\r\n            <br />\r\n            <p>\r\n              <strong>Email:</strong> {this.props.email}\r\n            </p>\r\n            <p>\r\n              <strong>City:</strong> {this.props.city}\r\n            </p>\r\n            <p>\r\n              <strong>Skill:</strong> {this.props.skill}\r\n            </p>\r\n            <p>\r\n              <strong>Average: </strong>\r\n              {this.props.grades} %\r\n          </p>\r\n            <div className=\"display-grades-list\">\r\n              {this.state.isShow ? <div>\r\n                <DisplayGrade grades={this.props.gradeArray}\r\n                />\r\n                <div id=\"container\">\r\n                  <AddTag />\r\n                </div>\r\n              </div>\r\n                : null}\r\n\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Content;\r\n\r\n","import React from \"react\";\r\n\r\n\r\nconst FormName = props => (\r\n\r\n\r\n    <div>\r\n        <input type=\"text\" className=\"form-control\"\r\n            aria-label=\"Sizing example input\"\r\n            aria-describedby=\"inputGroup-sizing-lg\"\r\n            placeholder=\"Form Name\"\r\n            value={props.search}\r\n            onChange={props.onChange} />\r\n\r\n    </div>\r\n)\r\n\r\n\r\nexport default FormName;","import React, { Component } from 'react';\nimport DisplayContent from \"./components/DisplayContent\"\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport './App.css';\nimport FormName from './components/FormName';\nimport * as math from 'mathjs';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      sum: 0,\n      search: '',\n      avg: []\n    }\n\n    this.displayData = this.displayData.bind(this);\n\n    this.calculateAverage = this.calculateAverage.bind(this)\n    this.average = this.average.bind(this)\n  }\n\n  componentDidMount() {\n    fetch(\"https://www.hatchways.io/api/assessment/students\")\n      .then(response => response.json())\n      .then(finalResponse =>\n        this.setState({\n          data: finalResponse.students\n        })\n      )\n  }\n\n  calculateAverage() {\n    this.setState({ sum: math.eval(this.state.sum + 5) });\n\n    // console.log(val,grade)\n    return this.state.sum;\n  }\n\n  updateSearch(event) {\n    this.setState({ search: event.target.value.substring(0, 20) });\n  }\n  average(grade) {\n    var sum = 0;\n    grade.map((val, id) => {\n      sum = math.eval(parseInt(grade[id]) + parseInt(sum))\n    })\n    const average = math.eval(sum / grade.length);\n    return average;\n\n  }\n  displayData() {\n    let filteredData = this.state.data.filter(\n      (name) => {\n        return name.firstName.toLowerCase().indexOf(this.state.search.toLowerCase()) !== -1\n      }\n    )\n\n    return (\n      filteredData.map((val, studId) =>\n        <DisplayContent\n          key={val.id}\n          pic={val.pic}\n          firstName={val.firstName}\n          lastName={val.lastName}\n          city={val.city}\n          email={val.email}\n          skill={val.skill}\n          gradeArray={val.grades}\n          grades={this.average(val.grades)}\n        />\n      )\n    )\n  }\n\n  render() {\n\n\n    return (\n      <div className=\"wrapper\">\n        <div className=\"container shadow-lg p-3 mb-5 bg-white rounded\">\n          <div className=\"main-content\">\n            <FormName\n              search={this.state.search}\n              onChange={this.updateSearch.bind(this)}\n            />\n            {this.displayData()}\n\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}